{"version":3,"sources":["utils/QuestionButton.js","Ladder.js","EndGameScreen.js","Game.js","App.js","index.js"],"names":["Button","styled","button","QuestionButton","id","this","props","onClick","marked","style","backgroundColor","color","text","PropTypes","any","func","string","Component","LadderEntry","div","LadderWrapper","Ladder","state","document","getElementById","cr","currentQuestion","map","item","key","EndFont","Wrapper","EndGameScreen","resetGame","white","Answers","QuestionWrapper","NQ","Game","answerPossibilities","questions","questionJson","currentAnswer","evalutationActive","questionText","gameOver","endGameText","initGame","answersText","i","possibilities","setState","question","anwser","nextQuestion","visibility","questionsText","evaluateQuestion","e","answerPlayer","target","correct","Array","from","index","setTimeout","App","className","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cf1f65d6.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n    height:50px;\n    width:350px;\n    color:white;\n    border:none;\n    padding: 5px 5px;\n    margin: 5px;\n    font-family: Arial, Helvetica, sans-serif;\n`\n\nclass QuestionButton extends Component {\n    static get propTypes () {\n        return {\n            id: PropTypes.any,\n            text: PropTypes.any,\n            onClick: PropTypes.func,\n            color: PropTypes.string\n        }\n    }\n\n    render() {\n        return (\n            <Button id={this.props.id} onClick={this.props.onClick} marked={this.props.marked} style={{ backgroundColor: this.props.color }}>\n                {this.props.text}\n            </Button>\n        )\n    }\n}\n\nexport default QuestionButton","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst LadderEntry = styled.div`\n    background-color: #3848CB;\n    width: 130px;\n    height: 30px;\n    margin: 10px;\n    padding: 2px;\n    color: white;\n    font-family: Arial, Helvetica, sans-serif;\n    text-align:center;\n    vertical-align:middle;\n    line-height:30px;\n`\n\nconst LadderWrapper = styled.div`\n    position:absolute;\n    top: 50px;\n    left: 780px;\n`\n\nclass Ladder extends Component {\n    state = {\n        text: [\"Ekelmische!\",\"14 Schlücke\",\"13 Schlücke\",\"12 Schlücke\",\"11 Schlücke\",\"Doppelter Shot!\",\"9 Schlücke\",\"8 Schlücke\",\"7 Schlücke\",\"6 Schlücke\",\"Shot!\",\"4 Schlücke\",\"3 Schlücke\",\"2 Schlücke\",\"1 Schluck\"]\n    }\n    componentDidMount() {\n        document.getElementById(\"1 Schluck\").style.backgroundColor = \"orange\"\n    }\n\n    componentDidUpdate() {\n        var cr = (this.props.currentQuestion)\n        cr = 15 - cr\n        var entry = document.getElementById(this.state.text[cr-1])\n        entry.style.backgroundColor = \"orange\"\n    }\n\n    render() {\n        return (\n            <LadderWrapper>\n                {this.state.text.map(item => <LadderEntry key={item} id={item}>{item}</LadderEntry>)}\n            </LadderWrapper>\n        )\n    }\n}\n\nexport default Ladder","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst EndFont = styled.div`\n    color:white;\n    font-size: 40px;\n`\nconst Wrapper = styled.div`\n    position:absolute;\n    height:200px;\n    width:400px;\n    left:270px;\n    top:400px;\n    background-color: #3848CB;\n    text-align:center;\n    vertical-align:middle;\n    line-height:200px;\n`\n\nclass EndGameScreen extends Component {\n    render() {\n        return (\n            <Wrapper>\n                <EndFont>{this.props.text}</EndFont>\n                <button onClick={ this.props.resetGame }>Neues Spiel</button>\n            </Wrapper>\n        )\n    }\n}\n\nexport default EndGameScreen","import React, { Component } from 'react'\nimport QuestionButton from './utils/QuestionButton.js'\nimport questionJson from './questionsWWW1.json'\nimport Ladder from './Ladder'\nimport EndGameScreen from './EndGameScreen'\nimport styled from 'styled-components'\n\n// colors\nconst green = 'green'\nconst orange = '#FFA500'\nconst white = '#3848CB'\n\nconst Wrapper = styled.div`\n    height: 100vh;\n    width: 100vh;\n    left:0px;\n    top:0px;\n    border: 0;\n    padding: 0;\n    margin: -10px;\n    margin-top:-16px;\n    background-image: linear-gradient(to bottom right, #00008b, black);\n`\n\nconst Answers = styled.div`\n    position:absolute;\n    top:630px;\n    left:30px;\n`\n\nconst QuestionWrapper = styled.div`\n    position: absolute;\n    top:550px;\n    left:80px;\n    background-color:#3848CB;\n    height:50px;\n    width:600px;\n    color:white;\n    padding:10px;\n    border-style: solid;\n    border-width: 2px;\n    border-color: #C6D2FA;\n    font-family: Arial, Helvetica, sans-serif;\n    text-align:center;\n    vertical-align:middle;\n    font-weight:bold;\n`\nconst NQ = styled.button`\n    width:200px;\n    height: 30px;\n    font-size:20px;\n    border:none;\n    background-color:orange;\n    color:white;\n    position:absolute;\n    visibility: hidden;\n    left: 50px;\n    top: 50px;\n`\n\n\nclass Game extends Component {\n    state = {\n        currentQuestion: 0,\n        answerPossibilities: [\"5+2\", \"5+1\", \"5+1\", \"5+1\"],\n        questions: questionJson.questions,\n        currentAnswer: null,\n        color: [white, white, white, white],\n        evalutationActive: false,\n        questionText: null,\n        gameOver: true,\n        endGameText: \"\"\n    }\n\n    initGame = () => {\n        var answersText = []\n        for (var i = 0; i < 4; i++) {\n            answersText[i] = this.state.questions[0].possibilities[i]\n        }\n        this.setState({ color: [white, white, white, white] })\n        this.setState({ questionText: questionJson.questions[0].question })\n        this.setState({ currentQuestion: 0 })\n        this.setState({ currentAnswer: questionJson.questions[0].anwser })\n        this.setState({ answerPossibilities: questionJson.questions[0].possibilities })\n        // document.getElementById(\"nq\").style.visibility = \"none\"\n    }\n\n    resetGame = () => {\n        this.setState({ gameOver: false })\n        this.initGame()\n    }\n\n    nextQuestion = () => {\n        //disable button\n        document.getElementById(\"nq\").style.visibility = \"hidden\"\n        this.setState({ currentQuestion: this.state.currentQuestion + 1 }, () => {\n            var questionsText = []\n            for (var i = 0; i < 4; i++) {\n                questionsText[i] = this.state.questions[this.state.currentQuestion].possibilities[i]\n            }\n            this.setState({ currentAnswer: questionJson.questions[this.state.currentQuestion].anwser })\n            this.setState({ questionText: questionJson.questions[this.state.currentQuestion].question })\n            this.setState({ answerPossibilities: questionJson.questions[this.state.currentQuestion].possibilities })\n        })\n\n        // set all buttons to white\n        this.setState({ color: [white,white,white,white]})\n    }\n\n    evaluateQuestion = (e) => {\n        if (!this.state.evalutationActive) {\n            const answerPlayer = e.target.id\n            var correct = false\n            var color = Array.from(this.state.color)\n            var index = null\n\n            // change button to orange\n            switch (e.target.id) {\n                case 'A':\n                    index = 0\n                    break;\n                case 'B':\n                    index = 1\n                    break;\n                case 'C':\n                    index = 2 \n                    break;\n                case 'D':\n                    index = 3\n                    break;\n                default:\n            }\n\n            color[index] = orange\n            this.setState({ color: color }, () => {})\n            \n            if (answerPlayer === this.state.currentAnswer) {\n                correct = true\n            }\n            \n            \n\n            if (correct === true) {\n                // change button to green\n                if(this.state.currentQuestion===14){\n                    this.setState({ gameOver: true })\n                    this.setState({ endGameText: \"Gewonnen\" })\n                } else {\n                setTimeout(() => {\n                    color[index] = green\n                    this.setState({color: color})\n                    document.getElementById(\"nq\").style.visibility = \"visible\"\n                }, 7000)\n            }\n                \n                \n            } else {\n                //game end screen\n                setTimeout(() => {\n                    this.setState({ gameOver: true })\n                    this.setState({ endGameText: \"Verloren\" })\n                }, 7000)\n            }\n        }\n    }\n\n    render() {\n        return (\n            \n            !this.state.gameOver ?\n            <Wrapper>\n                <Ladder currentQuestion={this.state.currentQuestion} />\n                <QuestionWrapper>{ this.state.questionText }</QuestionWrapper>\n                <Answers>\n                    <QuestionButton onClick={(e) => { this.evaluateQuestion(e) }} text={this.state.answerPossibilities[0]} id='A' color={this.state.color[0]} />\n                    <QuestionButton onClick={(e) => { this.evaluateQuestion(e) }} text={this.state.answerPossibilities[1]} id='B' color={this.state.color[1]} />\n                    <br/>\n                    <QuestionButton onClick={(e) => { this.evaluateQuestion(e) }} text={this.state.answerPossibilities[2]} id='C' color={this.state.color[2]} />\n                    <QuestionButton onClick={(e) => { this.evaluateQuestion(e) }} text={this.state.answerPossibilities[3]} id='D' color={this.state.color[3]} />\n                </Answers>\n                <NQ id=\"nq\" onClick={() => { this.nextQuestion() }}>Nächste Frage</NQ>\n            </Wrapper>:\n            <Wrapper>\n            <EndGameScreen resetGame={this.resetGame} text={this.state.endGameText} />\n            </Wrapper>\n        )\n    }\n}\n\nexport default Game","import React from 'react';\nimport Game from './Game.js'\n\nfunction App() {\n\n  \n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}