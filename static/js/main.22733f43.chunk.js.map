{"version":3,"sources":["utils/QuestionButton.js","Ladder.js","EndGameScreen.js","Game.js","App.js","index.js"],"names":["Button","styled","button","QuestionButton","id","this","props","onClick","marked","style","backgroundColor","color","text","PropTypes","any","func","string","Component","LadderEntry","div","LadderWrapper","Ladder","state","document","getElementById","console","log","currentQuestion","cr","toString","map","item","key","EndFont","Wrapper","EndGameScreen","resetGame","white","Answers","QuestionWrapper","NQ","Game","answerPossibilities","questions","questionJson","currentAnswer","evalutationActive","questionText","gameOver","endGameText","initGame","answersText","i","possibilities","setState","question","anwser","nextQuestion","visibility","questionsText","evaluateQuestion","e","answerPlayer","target","correct","Array","from","index","setTimeout","App","className","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.22733f43.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n    height:30px;\n    width:200px;\n    color:white;\n    border:none;\n    padding: 5px 5px;\n    margin: 5px;\n    font-family: Arial, Helvetica, sans-serif;\n`\n\nclass QuestionButton extends Component {\n    static get propTypes () {\n        return {\n            id: PropTypes.any,\n            text: PropTypes.any,\n            onClick: PropTypes.func,\n            color: PropTypes.string\n        }\n    }\n\n    render() {\n        return (\n            <Button id={this.props.id} onClick={this.props.onClick} marked={this.props.marked} style={{ backgroundColor: this.props.color }}>\n                {this.props.text}\n            </Button>\n        )\n    }\n}\n\nexport default QuestionButton","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst LadderEntry = styled.div`\n    background-color: #3848CB;\n    width: 130px;\n    height: 30px;\n    margin: 10px;\n    padding: 2px;\n    color: white;\n    font-family: Arial, Helvetica, sans-serif;\n    text-align:center;\n    vertical-align:middle;\n    line-height:30px;\n`\n\nconst LadderWrapper = styled.div`\n    position:absolute;\n    top: 50px;\n    left: 700px;\n`\n\nclass Ladder extends Component {\n    state = {\n        text: [\"15\",\"14\",\"13\",\"12\",\"11\",\"10\",\"9\",\"8\",\"7\",\"6\",\"5\",\"4\",\"3\",\"2\",\"1\"]\n    }\n    componentDidMount() {\n        document.getElementById(\"1\").style.backgroundColor = \"orange\"\n    }\n\n    componentDidUpdate() {\n        console.log(this.props.currentQuestion)\n        var cr = (this.props.currentQuestion+1).toString()\n        var entry = document.getElementById(cr.toString())\n        entry.style.backgroundColor = \"orange\"\n    }\n\n    render() {\n        return (\n            <LadderWrapper>\n                {this.state.text.map(item => <LadderEntry key={item} id={item}>{item}</LadderEntry>)}\n            </LadderWrapper>\n        )\n    }\n}\n\nexport default Ladder","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst EndFont = styled.div`\n    color:white;\n    font-size: 40px;\n`\nconst Wrapper = styled.div`\n    position:absolute;\n    height:200px;\n    width:400px;\n    left:270px;\n    top:400px;\n    background-color: #3848CB;\n    text-align:center;\n    vertical-align:middle;\n    line-height:200px;\n`\n\nclass EndGameScreen extends Component {\n    render() {\n        return (\n            <Wrapper>\n                <EndFont>{this.props.text}</EndFont>\n                <button onClick={ this.props.resetGame }>Neues Spiel</button>\n            </Wrapper>\n        )\n    }\n}\n\nexport default EndGameScreen","import React, { Component } from 'react'\nimport QuestionButton from './utils/QuestionButton.js'\nimport questionJson from './questionsWWW1.json'\nimport Ladder from './Ladder'\nimport EndGameScreen from './EndGameScreen'\nimport styled from 'styled-components'\n\n// colors\nconst green = 'green'\nconst orange = '#FFA500'\nconst white = '#3848CB'\n\nconst Wrapper = styled.div`\n    height: 100vh;\n    width: 100vh;\n    left:0px;\n    top:0px;\n    border: 0;\n    padding: 0;\n    margin: -10px;\n    margin-top:-16px;\n    background-image: linear-gradient(to bottom right, #00008b, black);\n`\n\nconst Answers = styled.div`\n    position:absolute;\n    top:630px;\n    left:150px;\n`\n\nconst QuestionWrapper = styled.div`\n    position: absolute;\n    top:550px;\n    left:60px;\n    background-color:#3848CB;\n    height:50px;\n    width:600px;\n    color:white;\n    padding:10px;\n    border-style: solid;\n    border-width: 2px;\n    border-color: #C6D2FA;\n    font-family: Arial, Helvetica, sans-serif;\n    text-align:center;\n    vertical-align:middle;\n    font-weight:bold;\n`\nconst NQ = styled.button`\n    width:200px;\n    height: 30px;\n    font-size:20px;\n    border:none;\n    background-color:orange;\n    color:white;\n    position:absolute;\n    visibility: hidden;\n    left: 50px;\n    top: 50px;\n`\n\n\nclass Game extends Component {\n    state = {\n        currentQuestion: 0,\n        answerPossibilities: [\"5+2\", \"5+1\", \"5+1\", \"5+1\"],\n        questions: questionJson.questions,\n        currentAnswer: null,\n        color: [white, white, white, white],\n        evalutationActive: false,\n        questionText: null,\n        gameOver: true,\n        endGameText: \"\"\n    }\n\n    initGame = () => {\n        var answersText = []\n        for (var i = 0; i < 4; i++) {\n            answersText[i] = this.state.questions[0].possibilities[i]\n        }\n        this.setState({ color: [white, white, white, white] })\n        this.setState({ questionText: questionJson.questions[0].question })\n        this.setState({ currentQuestion: 0 })\n        this.setState({ currentAnswer: questionJson.questions[0].anwser })\n        this.setState({ answerPossibilities: questionJson.questions[0].possibilities })\n        // document.getElementById(\"nq\").style.visibility = \"none\"\n    }\n\n    resetGame = () => {\n        this.setState({ gameOver: false })\n        this.initGame()\n    }\n\n    nextQuestion = () => {\n        //disable button \n        console.log(\"nq\")\n        document.getElementById(\"nq\").style.visibility = \"hidden\"\n        this.setState({ currentQuestion: this.state.currentQuestion + 1 }, () => {\n            var questionsText = []\n            for (var i = 0; i < 4; i++) {\n                questionsText[i] = this.state.questions[this.state.currentQuestion].possibilities[i]\n            }\n            this.setState({ currentAnswer: questionJson.questions[this.state.currentQuestion].anwser })\n            this.setState({ questionText: questionJson.questions[this.state.currentQuestion].question })\n            this.setState({ answerPossibilities: questionJson.questions[this.state.currentQuestion].possibilities })\n        })\n\n        // set all buttons to white\n        this.setState({ color: [white,white,white,white]})\n    }\n\n    evaluateQuestion = (e) => {\n        if (!this.state.evalutationActive) {\n            const answerPlayer = e.target.id\n            var correct = false\n            var color = Array.from(this.state.color)\n            var index = null\n\n            // change button to orange\n            switch (e.target.id) {\n                case 'A':\n                    index = 0\n                    break;\n                case 'B':\n                    index = 1\n                    break;\n                case 'C':\n                    index = 2 \n                    break;\n                case 'D':\n                    index = 3\n                    break;\n                default:\n            }\n\n            color[index] = orange\n            this.setState({ color: color }, () => {})\n            \n            if (answerPlayer === this.state.currentAnswer) {\n                correct = true\n            }\n            \n            \n\n            if (correct === true) {\n                // change button to green\n                setTimeout(() => {\n                    color[index] = green\n                    this.setState({color: color})\n                    document.getElementById(\"nq\").style.visibility = \"visible\"\n                }, 7000)\n                \n                if(this.state.currentQuestion===14){\n                    this.setState({ gameOver: true })\n                    this.setState({ endGameText: \"Gewonnen\" })\n                }\n            } else {\n                //game end screen\n                setTimeout(() => {\n                    this.setState({ gameOver: true })\n                    this.setState({ endGameText: \"Verloren\" })\n                }, 7000)\n            }\n        }\n    }\n\n    render() {\n        return (\n            \n            !this.state.gameOver ?\n            <Wrapper>\n                <Ladder currentQuestion={this.state.currentQuestion} />\n                <QuestionWrapper>{ this.state.questionText }</QuestionWrapper>\n                <Answers>\n                    <QuestionButton onClick={(e) => { this.evaluateQuestion(e) }} text={this.state.answerPossibilities[0]} id='A' color={this.state.color[0]} />\n                    <QuestionButton onClick={(e) => { this.evaluateQuestion(e) }} text={this.state.answerPossibilities[1]} id='B' color={this.state.color[1]} />\n                    <br/>\n                    <QuestionButton onClick={(e) => { this.evaluateQuestion(e) }} text={this.state.answerPossibilities[2]} id='C' color={this.state.color[2]} />\n                    <QuestionButton onClick={(e) => { this.evaluateQuestion(e) }} text={this.state.answerPossibilities[3]} id='D' color={this.state.color[3]} />\n                </Answers>\n                <NQ id=\"nq\" onClick={() => { this.nextQuestion() }}>Nächste Frage</NQ>\n            </Wrapper>:\n            <Wrapper>\n            <EndGameScreen resetGame={this.resetGame} text={this.state.endGameText} />\n            </Wrapper>\n        )\n    }\n}\n\nexport default Game","import React from 'react';\nimport Game from './Game.js'\n\nfunction App() {\n\n  \n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}